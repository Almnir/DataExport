using System.Collections.Generic;

namespace DataExport
{
    public static class Globals
    {
        public static FormSettings frmSettings = new FormSettings();

        public static string GetConnectionString()
        {
            return string.Format("Server={0};Database={1};User Id={2};Password={3};", frmSettings.ServerText, frmSettings.DatabaseText, frmSettings.LoginText, frmSettings.PasswordText);
        }

        public static List<string> TABLES_NAMES = new List<string>()
        {
            "ac_Appeals",
            "ac_AppealTasks",
            "ac_Changes",
            "dats_Borders",
            "dats_Groups",
            "prnf_CertificatePrintMain",
            "rbd_Address",
            "rbd_Areas",
            "rbd_Auditoriums",
            "rbd_AuditoriumsSubjects",
            "rbd_CurrentRegion",
            "rbd_CurrentRegionAddress",
            "rbd_Experts",
            "rbd_ExpertsExams",
            "rbd_ExpertsSubjects",
            "rbd_Governments",
            "rbd_ParticipantProperties",
            "rbd_Participants",
            "rbd_ParticipantsExamPStation",
            "rbd_ParticipantsExams",
            "rbd_ParticipantsExamsOnStation",
            "rbd_ParticipantsProfSubject",
            "rbd_ParticipantsSubject",
            "rbd_Places",
            "rbd_SchoolAddress",
            "rbd_Schools",
            "rbd_StationExamAuditory",
            "rbd_StationForm",
            "rbd_StationFormAct",
            "rbd_StationFormAuditoryFields",
            "rbd_StationFormFields",
            "rbd_Stations",
            "rbd_StationsExams",
            "rbd_StationWorkerOnExam",
            "rbd_StationWorkerOnStation",
            "rbd_StationWorkers",
            "rbd_StationWorkersAccreditation",
            "rbd_StationWorkersSubjects",
            "res_Answers",
            "res_Complects",
            "res_HumanTests",
            "res_Marks",
            "res_SubComplects",
            "res_Subtests",
            "sht_Alts",
            "sht_FinalMarks_C",
            "sht_FinalMarks_D",
            "sht_Marks_AB",
            "sht_Marks_C",
            "sht_Marks_D",
            "sht_Packages",
            "sht_Sheets_AB",
            "sht_Sheets_C",
            "sht_Sheets_D",
            "sht_Sheets_R"
        };

        public static Dictionary<string, string> EXPORTS_QUERIES = new Dictionary<string, string>
        {
            { "ac_Appeals", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT REGION as 'ns1:REGION',AppealID as 'ns1:AppealID',HumanTestFK as 'ns1:HumanTestFK',AppealType as 'ns1:AppealType',DeclinedByCommittee as 'ns1:DeclinedByCommittee',CreateTime as 'ns1:CreateTime',UpdateTime as 'ns1:UpdateTime',InProcess as 'ns1:InProcess',AppealCondition as 'ns1:AppealCondition',WorkStation as 'ns1:WorkStation',AppealComment as 'ns1:AppealComment' FROM ac_Appeals FOR XML PATH('ns1:ac_Appeals'), ROOT('ns1:GIADBSet'); "},
            { "ac_AppealTasks", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT REGION as 'ns1:REGION',AppealTaskID as 'ns1:AppealTaskID',AppealFK as 'ns1:AppealFK',TaskType as 'ns1:TaskType',TaskNumber as 'ns1:TaskNumber',OldValue as 'ns1:OldValue',NewValue as 'ns1:NewValue' FROM ac_AppealTasks FOR XML PATH('ns1:ac_AppealTasks'), ROOT('ns1:GIADBSet'); "},
            { "ac_Changes", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT REGION as 'ns1:REGION',ChangeID as 'ns1:ChangeID',AppealFK as 'ns1:AppealFK',OldPrimaryMark as 'ns1:OldPrimaryMark',OldMark100 as 'ns1:OldMark100',OldMark5 as 'ns1:OldMark5',NewPrimaryMark as 'ns1:NewPrimaryMark',NewMark100 as 'ns1:NewMark100',NewMark5 as 'ns1:NewMark5',Info as 'ns1:Info' FROM ac_Changes FOR XML PATH('ns1:ac_Changes'), ROOT('ns1:GIADBSet'); "},
            { "dats_Borders", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT REGION as 'ns1:REGION',BorderID as 'ns1:BorderID',SubjectCode as 'ns1:SubjectCode',ScalingGroupFK as 'ns1:ScalingGroupFK',PrimaryMark as 'ns1:PrimaryMark',ScaleMark as 'ns1:ScaleMark' FROM dats_Borders FOR XML PATH('ns1:dats_Borders'), ROOT('ns1:GIADBSet'); "},
            { "dats_Groups", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT REGION as 'ns1:REGION',ScalingGroupID as 'ns1:ScalingGroupID',GroupTypeCode as 'ns1:GroupTypeCode',GroupName as 'ns1:GroupName',TestTypeCode as 'ns1:TestTypeCode',SubjectCode as 'ns1:SubjectCode',ScaleMarkMinimum as 'ns1:ScaleMarkMinimum',GroupMarkMinimum as 'ns1:GroupMarkMinimum' FROM dats_Groups FOR XML PATH('ns1:dats_Groups'), ROOT('ns1:GIADBSet'); "},
            { "prnf_CertificatePrintMain", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT REGION as 'ns1:REGION',CertificatePrintMainID as 'ns1:CertificatePrintMainID',ParticipantFK as 'ns1:ParticipantFK',CertificateBlob as 'ns1:CertificateBlob',AreaCode as 'ns1:AreaCode',SchoolCode as 'ns1:SchoolCode',Punkt as 'ns1:Punkt',Wave as 'ns1:Wave',LicenseNumber as 'ns1:LicenseNumber',PrintTime as 'ns1:PrintTime',Surname as 'ns1:Surname',Name as 'ns1:Name',SecondName as 'ns1:SecondName',DocumentSeries as 'ns1:DocumentSeries',DocumentNumber as 'ns1:DocumentNumber',Sex as 'ns1:Sex',Graduate as 'ns1:Graduate',LicenseDouble as 'ns1:LicenseDouble',Reserve1 as 'ns1:Reserve1',Reserve2 as 'ns1:Reserve2',Reserve3 as 'ns1:Reserve3',Reserve4 as 'ns1:Reserve4',Reserve5 as 'ns1:Reserve5' FROM prnf_CertificatePrintMain FOR XML PATH('ns1:prnf_CertificatePrintMain'), ROOT('ns1:GIADBSet'); "},
            { "rbd_Address", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT AddressID as 'ns1:AddressID',REGION as 'ns1:REGION',ZipCode as 'ns1:ZipCode',LocalityTypeID as 'ns1:LocalityTypeID',LocalityName as 'ns1:LocalityName',StreetTypeID as 'ns1:StreetTypeID',StreetName as 'ns1:StreetName',BuildingTypeID as 'ns1:BuildingTypeID',BuildingNumber as 'ns1:BuildingNumber',TownshipID as 'ns1:TownshipID',CreateDate as 'ns1:CreateDate',UpdateDate as 'ns1:UpdateDate',ImportCreateDate as 'ns1:ImportCreateDate',ImportUpdateDate as 'ns1:ImportUpdateDate',IsDeleted as 'ns1:IsDeleted' FROM rbd_Address FOR XML PATH('ns1:rbd_Address'), ROOT('ns1:GIADBSet'); "},
            { "rbd_Areas", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT AreaID as 'ns1:AreaID',Region as 'ns1:Region',AreaCode as 'ns1:AreaCode',AreaName as 'ns1:AreaName',LawAddress as 'ns1:LawAddress',Address as 'ns1:Address',ChargeFIO as 'ns1:ChargeFIO',Phones as 'ns1:Phones',Mails as 'ns1:Mails',WWW as 'ns1:WWW',IsDeleted as 'ns1:IsDeleted' FROM rbd_Areas FOR XML PATH('ns1:rbd_Areas'), ROOT('ns1:GIADBSet'); "},
            { "rbd_Auditoriums", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT REGION as 'ns1:REGION',AuditoriumID as 'ns1:AuditoriumID',StationID as 'ns1:StationID',AuditoriumCode as 'ns1:AuditoriumCode',AuditoriumName as 'ns1:AuditoriumName',RowsCount as 'ns1:RowsCount',ColsCount as 'ns1:ColsCount',OrganizerOrder as 'ns1:OrganizerOrder',DeleteType as 'ns1:DeleteType',LimitPotencial as 'ns1:LimitPotencial',Imported as 'ns1:Imported',CreateDate as 'ns1:CreateDate',UpdateDate as 'ns1:UpdateDate',ImportCreateDate as 'ns1:ImportCreateDate',ImportUpdateDate as 'ns1:ImportUpdateDate',ExamForm as 'ns1:ExamForm',VideoControl as 'ns1:VideoControl',IsLab as 'ns1:IsLab' FROM rbd_Auditoriums FOR XML PATH('ns1:rbd_Auditoriums'), ROOT('ns1:GIADBSet'); "},
            { "rbd_AuditoriumsSubjects", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT ID as 'ns1:ID',SubjectCode as 'ns1:SubjectCode',AuditoriumID as 'ns1:AuditoriumID',REGION as 'ns1:REGION',IsDeleted as 'ns1:IsDeleted' FROM rbd_AuditoriumsSubjects FOR XML PATH('ns1:rbd_AuditoriumsSubjects'), ROOT('ns1:GIADBSet'); "},
            { "rbd_CurrentRegion", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT ID as 'ns1:ID',REGION as 'ns1:REGION',Name as 'ns1:Name',RCOIName as 'ns1:RCOIName',RCOILawAddress as 'ns1:RCOILawAddress',RCOIAddress as 'ns1:RCOIAddress',RCOIProperty as 'ns1:RCOIProperty',RCOIDPosition as 'ns1:RCOIDPosition',RCOIDFio as 'ns1:RCOIDFio',RCOIPhones as 'ns1:RCOIPhones',RCOIFaxs as 'ns1:RCOIFaxs',RCOIEMails as 'ns1:RCOIEMails',GEKAddress as 'ns1:GEKAddress',GEKDFio as 'ns1:GEKDFio',GEKPhones as 'ns1:GEKPhones',GEKFaxs as 'ns1:GEKFaxs',GEKEMails as 'ns1:GEKEMails',EGEWWW as 'ns1:EGEWWW' FROM rbd_CurrentRegion FOR XML PATH('ns1:rbd_CurrentRegion'), ROOT('ns1:GIADBSet'); "},
            { "rbd_CurrentRegionAddress", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT CurrentRegionAddressID as 'ns1:CurrentRegionAddressID',REGION as 'ns1:REGION',CurrentRegionID as 'ns1:CurrentRegionID',AddressID as 'ns1:AddressID',AddressTypeID as 'ns1:AddressTypeID',AddressKind as 'ns1:AddressKind',CreateDate as 'ns1:CreateDate',UpdateDate as 'ns1:UpdateDate',ImportCreateDate as 'ns1:ImportCreateDate',ImportUpdateDate as 'ns1:ImportUpdateDate',IsDeleted as 'ns1:IsDeleted' FROM rbd_CurrentRegionAddress FOR XML PATH('ns1:rbd_CurrentRegionAddress'), ROOT('ns1:GIADBSet'); "},
            { "rbd_Experts", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT ExpertID as 'ns1:ExpertID',REGION as 'ns1:REGION',ExpertCode as 'ns1:ExpertCode',Surname as 'ns1:Surname',Name as 'ns1:Name',SecondName as 'ns1:SecondName',DocumentSeries as 'ns1:DocumentSeries',DocumentNumber as 'ns1:DocumentNumber',DocumentTypeCode as 'ns1:DocumentTypeCode',Sex as 'ns1:Sex',EduTypeFK as 'ns1:EduTypeFK',EduKindFK as 'ns1:EduKindFK',Seniority as 'ns1:Seniority',PrecedingYear as 'ns1:PrecedingYear',BirthYear as 'ns1:BirthYear',IsDeleted as 'ns1:IsDeleted',Positions as 'ns1:Positions',SchoolID as 'ns1:SchoolID',NotSchoolJob as 'ns1:NotSchoolJob',ThirdVerifyAcc as 'ns1:ThirdVerifyAcc',CreateDate as 'ns1:CreateDate',UpdateDate as 'ns1:UpdateDate',ImportCreateDate as 'ns1:ImportCreateDate',ImportUpdateDate as 'ns1:ImportUpdateDate',GovernmentID as 'ns1:GovernmentID',InConflictCommission as 'ns1:InConflictCommission',Qualification as 'ns1:Qualification',ExpertCategoryID as 'ns1:ExpertCategoryID' FROM rbd_Experts FOR XML PATH('ns1:rbd_Experts'), ROOT('ns1:GIADBSet'); "},
            { "rbd_ExpertsExams", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT REGION as 'ns1:REGION',ID as 'ns1:ID',ExpertID as 'ns1:ExpertID',ExamGlobalID as 'ns1:ExamGlobalID',CreateDate as 'ns1:CreateDate',UpdateDate as 'ns1:UpdateDate',ImportCreateDate as 'ns1:ImportCreateDate',ImportUpdateDate as 'ns1:ImportUpdateDate',IsDeleted as 'ns1:IsDeleted',StationsExamsID as 'ns1:StationsExamsID',CheckFormOnExam as 'ns1:CheckFormOnExam' FROM rbd_ExpertsExams FOR XML PATH('ns1:rbd_ExpertsExams'), ROOT('ns1:GIADBSet'); "},
            { "rbd_ExpertsSubjects", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT REGION as 'ns1:REGION',ID as 'ns1:ID',ExpertID as 'ns1:ExpertID',SubjectCode as 'ns1:SubjectCode',IsDeleted as 'ns1:IsDeleted',CheckForm as 'ns1:CheckForm',ExpertCategoryID as 'ns1:ExpertCategoryID',ThirdVerifyAcc as 'ns1:ThirdVerifyAcc' FROM rbd_ExpertsSubjects FOR XML PATH('ns1:rbd_ExpertsSubjects'), ROOT('ns1:GIADBSet'); "},
            { "rbd_Governments", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT GovernmentID as 'ns1:GovernmentID',RegionID as 'ns1:RegionID',REGION as 'ns1:REGION',GovernmentCode as 'ns1:GovernmentCode',GovernmentName as 'ns1:GovernmentName',LawAddress as 'ns1:LawAddress',Address as 'ns1:Address',ChargeFIO as 'ns1:ChargeFIO',Phones as 'ns1:Phones',Mails as 'ns1:Mails',WWW as 'ns1:WWW',ChargePosition as 'ns1:ChargePosition',Faxes as 'ns1:Faxes',GType as 'ns1:GType',SpecialistFIO as 'ns1:SpecialistFIO',SpecialistMails as 'ns1:SpecialistMails',SpecialistPhones as 'ns1:SpecialistPhones',DeleteType as 'ns1:DeleteType',CreateDate as 'ns1:CreateDate',UpdateDate as 'ns1:UpdateDate',ImportCreateDate as 'ns1:ImportCreateDate',ImportUpdateDate as 'ns1:ImportUpdateDate',TimeZoneId as 'ns1:TimeZoneId' FROM rbd_Governments FOR XML PATH('ns1:rbd_Governments'), ROOT('ns1:GIADBSet'); "},
            { "rbd_ParticipantProperties", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT PropertyId as 'ns1:PropertyId',ParticipantId as 'ns1:ParticipantId',Property as 'ns1:Property',PValue as 'ns1:PValue',Region as 'ns1:Region',IsDeleted as 'ns1:IsDeleted' FROM rbd_ParticipantProperties FOR XML PATH('ns1:rbd_ParticipantProperties'), ROOT('ns1:GIADBSet'); "},
            { "rbd_Participants", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT ParticipantID as 'ns1:ParticipantID',Region as 'ns1:Region',ParticipantCode as 'ns1:ParticipantCode',Surname as 'ns1:Surname',Name as 'ns1:Name',SecondName as 'ns1:SecondName',DocumentSeries as 'ns1:DocumentSeries',DocumentNumber as 'ns1:DocumentNumber',DocumentTypeCode as 'ns1:DocumentTypeCode',Sex as 'ns1:Sex',Gia as 'ns1:Gia',GiaAccept as 'ns1:GiaAccept',pClass as 'ns1:pClass',BirthDay as 'ns1:BirthDay',Reserve1 as 'ns1:Reserve1',Reserve2 as 'ns1:Reserve2',DeleteType as 'ns1:DeleteType',LimitPotencial as 'ns1:LimitPotencial',ParticipantDouble as 'ns1:ParticipantDouble',FinishRegion as 'ns1:FinishRegion',ParticipantCategoryFK as 'ns1:ParticipantCategoryFK',SchoolRegistration as 'ns1:SchoolRegistration',SchoolOutcoming as 'ns1:SchoolOutcoming',Study as 'ns1:Study',CreateDate as 'ns1:CreateDate',UpdateDate as 'ns1:UpdateDate',ImportCreateDate as 'ns1:ImportCreateDate',ImportUpdateDate as 'ns1:ImportUpdateDate',CitizenshipID as 'ns1:CitizenshipID',SchoolOutcomingName as 'ns1:SchoolOutcomingName' FROM rbd_Participants FOR XML PATH('ns1:rbd_Participants'), ROOT('ns1:GIADBSet'); "},
            { "rbd_ParticipantsExamPStation", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT PExamPlacesOnStationID as 'ns1:PExamPlacesOnStationID',PlacesID as 'ns1:PlacesID',AuditoriumID as 'ns1:AuditoriumID',StationExamAuditoryID as 'ns1:StationExamAuditoryID',StationsExamsID as 'ns1:StationsExamsID',ParticipantsExamsOnStationID as 'ns1:ParticipantsExamsOnStationID',Region as 'ns1:Region',IsManual as 'ns1:IsManual',IsDeleted as 'ns1:IsDeleted' FROM rbd_ParticipantsExamPStation FOR XML PATH('ns1:rbd_ParticipantsExamPStation'), ROOT('ns1:GIADBSet'); "},
            { "rbd_ParticipantsExams", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT REGION as 'ns1:REGION',ParticipantID as 'ns1:ParticipantID',ExamGlobalID as 'ns1:ExamGlobalID',ParticipantsExamsID as 'ns1:ParticipantsExamsID',CreateDate as 'ns1:CreateDate',UpdateDate as 'ns1:UpdateDate',ImportCreateDate as 'ns1:ImportCreateDate',ImportUpdateDate as 'ns1:ImportUpdateDate',IsDeleted as 'ns1:IsDeleted',ExamFormatCode as 'ns1:ExamFormatCode' FROM rbd_ParticipantsExams FOR XML PATH('ns1:rbd_ParticipantsExams'), ROOT('ns1:GIADBSet'); "},
            { "rbd_ParticipantsExamsOnStation", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT ParticipantsExamsOnStationID as 'ns1:ParticipantsExamsOnStationID',ExamGlobalID as 'ns1:ExamGlobalID',ParticipantsExamsID as 'ns1:ParticipantsExamsID',StationsExamsID as 'ns1:StationsExamsID',Region as 'ns1:Region',CreateDate as 'ns1:CreateDate',UpdateDate as 'ns1:UpdateDate',ImportCreateDate as 'ns1:ImportCreateDate',ImportUpdateDate as 'ns1:ImportUpdateDate',IsDeleted as 'ns1:IsDeleted',SessionID as 'ns1:SessionID' FROM rbd_ParticipantsExamsOnStation FOR XML PATH('ns1:rbd_ParticipantsExamsOnStation'), ROOT('ns1:GIADBSet'); "},
            { "rbd_ParticipantsProfSubject", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT REGION as 'ns1:REGION',ID as 'ns1:ID',ParticipantID as 'ns1:ParticipantID',SubjectCode as 'ns1:SubjectCode',IsDeleted as 'ns1:IsDeleted' FROM rbd_ParticipantsProfSubject FOR XML PATH('ns1:rbd_ParticipantsProfSubject'), ROOT('ns1:GIADBSet'); "},
            { "rbd_ParticipantsSubject", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT REGION as 'ns1:REGION',ID as 'ns1:ID',ParticipantID as 'ns1:ParticipantID',SubjectCode as 'ns1:SubjectCode',IsDeleted as 'ns1:IsDeleted' FROM rbd_ParticipantsSubject FOR XML PATH('ns1:rbd_ParticipantsSubject'), ROOT('ns1:GIADBSet'); "},
            { "rbd_Places", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT PlacesID as 'ns1:PlacesID',REGION as 'ns1:REGION',AuditoriumID as 'ns1:AuditoriumID',Row as 'ns1:Row',Col as 'ns1:Col',IsBad as 'ns1:IsBad',IsDeleted as 'ns1:IsDeleted',PlaceType as 'ns1:PlaceType' FROM rbd_Places FOR XML PATH('ns1:rbd_Places'), ROOT('ns1:GIADBSet'); "},
            { "rbd_SchoolAddress", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT SchoolAddressID as 'ns1:SchoolAddressID',REGION as 'ns1:REGION',SchoolID as 'ns1:SchoolID',AddressID as 'ns1:AddressID',AddressTypeID as 'ns1:AddressTypeID',AddressKind as 'ns1:AddressKind',CreateDate as 'ns1:CreateDate',UpdateDate as 'ns1:UpdateDate',ImportCreateDate as 'ns1:ImportCreateDate',ImportUpdateDate as 'ns1:ImportUpdateDate',IsDeleted as 'ns1:IsDeleted' FROM rbd_SchoolAddress FOR XML PATH('ns1:rbd_SchoolAddress'), ROOT('ns1:GIADBSet'); "},
            { "rbd_Schools", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT SchoolID as 'ns1:SchoolID',GovernmentID as 'ns1:GovernmentID',SchoolCode as 'ns1:SchoolCode',SchoolName as 'ns1:SchoolName',SchoolKindFK as 'ns1:SchoolKindFK',SchoolPropertyFk as 'ns1:SchoolPropertyFk',AreaFK as 'ns1:AreaFK',TownTypeFK as 'ns1:TownTypeFK',LawAddress as 'ns1:LawAddress',Address as 'ns1:Address',DPosition as 'ns1:DPosition',FIO as 'ns1:FIO',Phones as 'ns1:Phones',Faxs as 'ns1:Faxs',Mails as 'ns1:Mails',People11 as 'ns1:People11',People9 as 'ns1:People9',ChargeFIO as 'ns1:ChargeFIO',WWW as 'ns1:WWW',LicNum as 'ns1:LicNum',LicRegNo as 'ns1:LicRegNo',LicIssueDate as 'ns1:LicIssueDate',LicFinishingDate as 'ns1:LicFinishingDate',AccCertNum as 'ns1:AccCertNum',AccCertRegNo as 'ns1:AccCertRegNo',AccCertIssueDate as 'ns1:AccCertIssueDate',AccCertFinishingDate as 'ns1:AccCertFinishingDate',isVirtualSchool as 'ns1:isVirtualSchool',SReserve1 as 'ns1:SReserve1',SReserve2 as 'ns1:SReserve2',DeleteType as 'ns1:DeleteType',IsTOM as 'ns1:IsTOM',REGION as 'ns1:REGION',ShortName as 'ns1:ShortName',TownshipFK as 'ns1:TownshipFK',CreateDate as 'ns1:CreateDate',UpdateDate as 'ns1:UpdateDate',ImportCreateDate as 'ns1:ImportCreateDate',ImportUpdateDate as 'ns1:ImportUpdateDate',SchoolFlags as 'ns1:SchoolFlags' FROM rbd_Schools FOR XML PATH('ns1:rbd_Schools'), ROOT('ns1:GIADBSet'); "},
            { "rbd_StationExamAuditory", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT StationExamAuditoryID as 'ns1:StationExamAuditoryID',Region as 'ns1:Region',StationsExamsID as 'ns1:StationsExamsID',StationID as 'ns1:StationID',AuditoriumID as 'ns1:AuditoriumID',PlacesCount as 'ns1:PlacesCount',CreateDate as 'ns1:CreateDate',UpdateDate as 'ns1:UpdateDate',ImportCreateDate as 'ns1:ImportCreateDate',ImportUpdateDate as 'ns1:ImportUpdateDate',IsDeleted as 'ns1:IsDeleted',IsPreparation as 'ns1:IsPreparation',ExamFormatCode as 'ns1:ExamFormatCode',IsAutoAppoint as 'ns1:IsAutoAppoint' FROM rbd_StationExamAuditory FOR XML PATH('ns1:rbd_StationExamAuditory'), ROOT('ns1:GIADBSet'); "},
            { "rbd_StationForm", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT StationFormId as 'ns1:StationFormId',StationFormType as 'ns1:StationFormType',Region as 'ns1:Region',RegistrationCode as 'ns1:RegistrationCode',GovermentCode as 'ns1:GovermentCode',StationCode as 'ns1:StationCode',SubjectCode as 'ns1:SubjectCode',ExamDate as 'ns1:ExamDate',CurrentPage as 'ns1:CurrentPage',CountPage as 'ns1:CountPage',GovermentID as 'ns1:GovermentID',StationID as 'ns1:StationID',ExamGlobalID as 'ns1:ExamGlobalID',IsTOM as 'ns1:IsTOM',ProjectName as 'ns1:ProjectName',IDCode as 'ns1:IDCode',ProjectBatchId as 'ns1:ProjectBatchId' FROM rbd_StationForm FOR XML PATH('ns1:rbd_StationForm'), ROOT('ns1:GIADBSet'); "},
            { "rbd_StationFormAct", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT StationFormActId as 'ns1:StationFormActId',Region as 'ns1:Region',RegistrationCode as 'ns1:RegistrationCode',GovermentCode as 'ns1:GovermentCode',StationCode as 'ns1:StationCode',SubjectCode as 'ns1:SubjectCode',ExamDate as 'ns1:ExamDate',GovermentID as 'ns1:GovermentID',StationID as 'ns1:StationID',ExamGlobalID as 'ns1:ExamGlobalID',ProjectName as 'ns1:ProjectName',ProjectBatchId as 'ns1:ProjectBatchId',CertificateNum as 'ns1:CertificateNum',StartTime as 'ns1:StartTime',EndTime as 'ns1:EndTime',IDCode as 'ns1:IDCode',B01 as 'ns1:B01',B02 as 'ns1:B02',B03 as 'ns1:B03',B04 as 'ns1:B04',B05 as 'ns1:B05',B01Other as 'ns1:B01Other',B02Other as 'ns1:B02Other',B03Other as 'ns1:B03Other',B04Other as 'ns1:B04Other',B05Other as 'ns1:B05Other',B1 as 'ns1:B1',B2 as 'ns1:B2',B3 as 'ns1:B3',B4 as 'ns1:B4',B5 as 'ns1:B5',B6 as 'ns1:B6',B7 as 'ns1:B7',B8 as 'ns1:B8',B9 as 'ns1:B9',B10 as 'ns1:B10',B11 as 'ns1:B11',B12 as 'ns1:B12',B13 as 'ns1:B13',B14 as 'ns1:B14',B15 as 'ns1:B15',B16 as 'ns1:B16',B17 as 'ns1:B17',B18 as 'ns1:B18',B19 as 'ns1:B19',B20 as 'ns1:B20',B21 as 'ns1:B21',B22 as 'ns1:B22',B23 as 'ns1:B23',B24 as 'ns1:B24',B25 as 'ns1:B25',B26 as 'ns1:B26',B27 as 'ns1:B27',B28 as 'ns1:B28',B29 as 'ns1:B29',B30 as 'ns1:B30',Comments as 'ns1:Comments',AuditoriumsCount as 'ns1:AuditoriumsCount',ImageNumber as 'ns1:ImageNumber' FROM rbd_StationFormAct FOR XML PATH('ns1:rbd_StationFormAct'), ROOT('ns1:GIADBSet'); "},
            { "rbd_StationFormAuditoryFields", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT StationFormAuditoryFieldsId as 'ns1:StationFormAuditoryFieldsId',StationFormId as 'ns1:StationFormId',Region as 'ns1:Region',StationFormsFieldsHelperId as 'ns1:StationFormsFieldsHelperId',AuditoriumCode as 'ns1:AuditoriumCode',AuditoriumID as 'ns1:AuditoriumID',FieldValue1 as 'ns1:FieldValue1',FieldValue2 as 'ns1:FieldValue2',FieldValue3 as 'ns1:FieldValue3' FROM rbd_StationFormAuditoryFields FOR XML PATH('ns1:rbd_StationFormAuditoryFields'), ROOT('ns1:GIADBSet'); "},
            { "rbd_StationFormFields", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT StationFormFieldsId as 'ns1:StationFormFieldsId',StationFormId as 'ns1:StationFormId',Region as 'ns1:Region',StationFormsFieldsHelperId as 'ns1:StationFormsFieldsHelperId',FieldValue as 'ns1:FieldValue',FieldDesc as 'ns1:FieldDesc' FROM rbd_StationFormFields FOR XML PATH('ns1:rbd_StationFormFields'), ROOT('ns1:GIADBSet'); "},
            { "rbd_Stations", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT StationID as 'ns1:StationID',REGION as 'ns1:REGION',AreaID as 'ns1:AreaID',StationCode as 'ns1:StationCode',StationName as 'ns1:StationName',StationAddress as 'ns1:StationAddress',SchoolFK as 'ns1:SchoolFK',GovernmentID as 'ns1:GovernmentID',sVolume as 'ns1:sVolume',IsActive as 'ns1:IsActive',Phones as 'ns1:Phones',Mails as 'ns1:Mails',PCenterID as 'ns1:PCenterID',IsTOM as 'ns1:IsTOM',DeleteType as 'ns1:DeleteType',AuditoriumsCount as 'ns1:AuditoriumsCount',CreateDate as 'ns1:CreateDate',UpdateDate as 'ns1:UpdateDate',ImportCreateDate as 'ns1:ImportCreateDate',ImportUpdateDate as 'ns1:ImportUpdateDate',ExamForm as 'ns1:ExamForm',VideoControl as 'ns1:VideoControl',AddressID as 'ns1:AddressID',StationFlags as 'ns1:StationFlags',TimeZoneId as 'ns1:TimeZoneId' FROM rbd_Stations FOR XML PATH('ns1:rbd_Stations'), ROOT('ns1:GIADBSet'); "},
            { "rbd_StationsExams", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT REGION as 'ns1:REGION',StationsExamsID as 'ns1:StationsExamsID',StationID as 'ns1:StationID',ExamGlobalID as 'ns1:ExamGlobalID',PlacesCount as 'ns1:PlacesCount',LockOnStation as 'ns1:LockOnStation',CreateDate as 'ns1:CreateDate',UpdateDate as 'ns1:UpdateDate',ImportCreateDate as 'ns1:ImportCreateDate',ImportUpdateDate as 'ns1:ImportUpdateDate',IsDeleted as 'ns1:IsDeleted',IsAutoAppoint as 'ns1:IsAutoAppoint' FROM rbd_StationsExams FOR XML PATH('ns1:rbd_StationsExams'), ROOT('ns1:GIADBSet'); "},
            { "rbd_StationWorkerOnExam", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT REGION as 'ns1:REGION',StationWorkerOnExamID as 'ns1:StationWorkerOnExamID',SWorkerPositionID as 'ns1:SWorkerPositionID',StationsExamsID as 'ns1:StationsExamsID',AuditoriumID as 'ns1:AuditoriumID',StationExamAuditoryID as 'ns1:StationExamAuditoryID',StationWorkerOnStationID as 'ns1:StationWorkerOnStationID',StationId as 'ns1:StationId',StationWorkerId as 'ns1:StationWorkerId',CreateDate as 'ns1:CreateDate',UpdateDate as 'ns1:UpdateDate',ImportCreateDate as 'ns1:ImportCreateDate',ImportUpdateDate as 'ns1:ImportUpdateDate',IsDeleted as 'ns1:IsDeleted',OrganizationRolesID as 'ns1:OrganizationRolesID',SWorkerRoleID as 'ns1:SWorkerRoleID' FROM rbd_StationWorkerOnExam FOR XML PATH('ns1:rbd_StationWorkerOnExam'), ROOT('ns1:GIADBSet'); "},
            { "rbd_StationWorkerOnStation", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT StationWorkerOnStationID as 'ns1:StationWorkerOnStationID',StationId as 'ns1:StationId',StationWorkerId as 'ns1:StationWorkerId',WorkerType as 'ns1:WorkerType',SWorkerPositionID as 'ns1:SWorkerPositionID',Region as 'ns1:Region',CreateDate as 'ns1:CreateDate',UpdateDate as 'ns1:UpdateDate',ImportCreateDate as 'ns1:ImportCreateDate',ImportUpdateDate as 'ns1:ImportUpdateDate',IsDeleted as 'ns1:IsDeleted' FROM rbd_StationWorkerOnStation FOR XML PATH('ns1:rbd_StationWorkerOnStation'), ROOT('ns1:GIADBSet'); "},
            { "rbd_StationWorkers", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT StationWorkerID as 'ns1:StationWorkerID',REGION as 'ns1:REGION',DocumentTypeCode as 'ns1:DocumentTypeCode',StationWorkerCode as 'ns1:StationWorkerCode',Surname as 'ns1:Surname',Name as 'ns1:Name',SecondName as 'ns1:SecondName',DocumentSeries as 'ns1:DocumentSeries',DocumentNumber as 'ns1:DocumentNumber',Sex as 'ns1:Sex',BirthYear as 'ns1:BirthYear',SchoolPosition as 'ns1:SchoolPosition',NotSchoolJob as 'ns1:NotSchoolJob',DeleteType as 'ns1:DeleteType',GovernmentID as 'ns1:GovernmentID',SchoolID as 'ns1:SchoolID',WorkerPositionID as 'ns1:WorkerPositionID',Imported as 'ns1:Imported',CreateDate as 'ns1:CreateDate',UpdateDate as 'ns1:UpdateDate',ImportCreateDate as 'ns1:ImportCreateDate',ImportUpdateDate as 'ns1:ImportUpdateDate',PrecedingYear as 'ns1:PrecedingYear',Seniority as 'ns1:Seniority',EducationTypeID as 'ns1:EducationTypeID',SWorkerCategory as 'ns1:SWorkerCategory',CertificateKeyID as 'ns1:CertificateKeyID',Phones as 'ns1:Phones',Mails as 'ns1:Mails' FROM rbd_StationWorkers FOR XML PATH('ns1:rbd_StationWorkers'), ROOT('ns1:GIADBSet'); "},
            { "rbd_StationWorkersAccreditation", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT SWorkerAccreditationID as 'ns1:SWorkerAccreditationID',Region as 'ns1:Region',StationWorkerID as 'ns1:StationWorkerID',GovernmentID as 'ns1:GovernmentID',NotGovernmentAccreditation as 'ns1:NotGovernmentAccreditation',DocumentNumber as 'ns1:DocumentNumber',IsFamily as 'ns1:IsFamily',DateFrom as 'ns1:DateFrom',DateTo as 'ns1:DateTo',CreateDate as 'ns1:CreateDate',UpdateDate as 'ns1:UpdateDate',ImportCreateDate as 'ns1:ImportCreateDate',ImportUpdateDate as 'ns1:ImportUpdateDate' FROM rbd_StationWorkersAccreditation FOR XML PATH('ns1:rbd_StationWorkersAccreditation'), ROOT('ns1:GIADBSet'); "},
            { "rbd_StationWorkersSubjects", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT REGION as 'ns1:REGION',ID as 'ns1:ID',SubjectCode as 'ns1:SubjectCode',StationWorkerID as 'ns1:StationWorkerID',IsDeleted as 'ns1:IsDeleted' FROM rbd_StationWorkersSubjects FOR XML PATH('ns1:rbd_StationWorkersSubjects'), ROOT('ns1:GIADBSet'); "},
            { "res_Answers", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT REGION as 'ns1:REGION',AnswerID as 'ns1:AnswerID',HumanTestFK as 'ns1:HumanTestFK',TaskTypeCode as 'ns1:TaskTypeCode',TaskNumber as 'ns1:TaskNumber',AnswerValue as 'ns1:AnswerValue',ReplaceValue as 'ns1:ReplaceValue',CategoryValue as 'ns1:CategoryValue' FROM res_Answers FOR XML PATH('ns1:res_Answers'), ROOT('ns1:GIADBSet'); "},
            { "res_Complects", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT REGION as 'ns1:REGION',ComplectID as 'ns1:ComplectID',Barcode_AB as 'ns1:Barcode_AB',Barcode_C as 'ns1:Barcode_C',Barcode_R as 'ns1:Barcode_R',Barcode_D as 'ns1:Barcode_D',SheetFK_AB as 'ns1:SheetFK_AB',SheetFK_C as 'ns1:SheetFK_C',SheetFK_R as 'ns1:SheetFK_R',SheetFK_D as 'ns1:SheetFK_D',RegionCode as 'ns1:RegionCode',DepartmentCode as 'ns1:DepartmentCode',TestTypeCode as 'ns1:TestTypeCode',SubjectCode as 'ns1:SubjectCode',ExamDate as 'ns1:ExamDate',ZoneCode as 'ns1:ZoneCode',StuffCode as 'ns1:StuffCode',VariantCode as 'ns1:VariantCode',IsTom as 'ns1:IsTom',ComplectType as 'ns1:ComplectType',ExchangedID as 'ns1:ExchangedID' FROM res_Complects FOR XML PATH('ns1:res_Complects'), ROOT('ns1:GIADBSet'); "},
            { "res_HumanTests", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT REGION as 'ns1:REGION',HumanTestID as 'ns1:HumanTestID',ParticipantFK as 'ns1:ParticipantFK',PackageFK as 'ns1:PackageFK',FileName as 'ns1:FileName',RegionCode as 'ns1:RegionCode',DepartmentCode as 'ns1:DepartmentCode',TestTypeCode as 'ns1:TestTypeCode',SubjectCode as 'ns1:SubjectCode',ExamDate as 'ns1:ExamDate',StationCode as 'ns1:StationCode',AuditoriumCode as 'ns1:AuditoriumCode',VariantCode as 'ns1:VariantCode',ProcessCondition as 'ns1:ProcessCondition',LicenseCondition as 'ns1:LicenseCondition',ReplicationCondition as 'ns1:ReplicationCondition',Reserve01 as 'ns1:Reserve01',Reserve02 as 'ns1:Reserve02',Reserve03 as 'ns1:Reserve03',Reserve04 as 'ns1:Reserve04',Reserve05 as 'ns1:Reserve05',Reserve06 as 'ns1:Reserve06',Reserve07 as 'ns1:Reserve07',Reserve08 as 'ns1:Reserve08',Reserve09 as 'ns1:Reserve09',Reserve10 as 'ns1:Reserve10' FROM res_HumanTests FOR XML PATH('ns1:res_HumanTests'), ROOT('ns1:GIADBSet'); "},
            { "res_Marks", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT REGION as 'ns1:REGION',HumanTestID as 'ns1:HumanTestID',PrimaryMark as 'ns1:PrimaryMark',PercentMark as 'ns1:PercentMark',Mark100 as 'ns1:Mark100',Mark5 as 'ns1:Mark5',MarkX as 'ns1:MarkX',Rating as 'ns1:Rating',PrimaryMarkA as 'ns1:PrimaryMarkA',TestResultA as 'ns1:TestResultA',PrimaryMarkB as 'ns1:PrimaryMarkB',TestResultB as 'ns1:TestResultB',PrimaryMarkC as 'ns1:PrimaryMarkC',TestResultC as 'ns1:TestResultC',PrimaryMarkD as 'ns1:PrimaryMarkD',TestResultD as 'ns1:TestResultD' FROM res_Marks FOR XML PATH('ns1:res_Marks'), ROOT('ns1:GIADBSet'); "},
            { "res_SubComplects", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT REGION as 'ns1:REGION',SubComplectID as 'ns1:SubComplectID',Barcode_KIM as 'ns1:Barcode_KIM',Barcode_R as 'ns1:Barcode_R',Barcode_D as 'ns1:Barcode_D',SheetFK_R as 'ns1:SheetFK_R',SheetFK_D as 'ns1:SheetFK_D',RegionCode as 'ns1:RegionCode',DepartmentCode as 'ns1:DepartmentCode',TestTypeCode as 'ns1:TestTypeCode',SubjectCode as 'ns1:SubjectCode',ExamDate as 'ns1:ExamDate',ZoneCode as 'ns1:ZoneCode',StuffCode as 'ns1:StuffCode',VariantCode as 'ns1:VariantCode',IsTom as 'ns1:IsTom' FROM res_SubComplects FOR XML PATH('ns1:res_SubComplects'), ROOT('ns1:GIADBSet'); "},
            { "res_Subtests", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT REGION as 'ns1:REGION',SubtestID as 'ns1:SubtestID',HumanTestID as 'ns1:HumanTestID',ParticipantFK as 'ns1:ParticipantFK',PackageFK as 'ns1:PackageFK',SubtestType as 'ns1:SubtestType',TestTypeCode as 'ns1:TestTypeCode',SubjectCode as 'ns1:SubjectCode',SubtestName as 'ns1:SubtestName',ExamDate as 'ns1:ExamDate',VariantCode as 'ns1:VariantCode',ProcessCondition as 'ns1:ProcessCondition',ReplicationCondition as 'ns1:ReplicationCondition',UpdateDate as 'ns1:UpdateDate',Tasks as 'ns1:Tasks',PrimaryMark as 'ns1:PrimaryMark',Mark as 'ns1:Mark',Minimum as 'ns1:Minimum' FROM res_Subtests FOR XML PATH('ns1:res_Subtests'), ROOT('ns1:GIADBSet'); "},
            { "sht_Alts", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT AltID as 'ns1:AltID',REGION as 'ns1:REGION',SheetFK as 'ns1:SheetFK',Barcode as 'ns1:Barcode',ProtocolCode as 'ns1:ProtocolCode',ExpertFK as 'ns1:ExpertFK',ExpertCode as 'ns1:ExpertCode',IsThird as 'ns1:IsThird',Alt as 'ns1:Alt',DeleteType as 'ns1:DeleteType',Reserve01 as 'ns1:Reserve01',Reserve02 as 'ns1:Reserve02' FROM sht_Alts FOR XML PATH('ns1:sht_Alts'), ROOT('ns1:GIADBSet'); "},
            { "sht_FinalMarks_C", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT REGION as 'ns1:REGION',MarkID as 'ns1:MarkID',SheetFK as 'ns1:SheetFK',TaskNumber as 'ns1:TaskNumber',MarkValue as 'ns1:MarkValue' FROM sht_FinalMarks_C FOR XML PATH('ns1:sht_FinalMarks_C'), ROOT('ns1:GIADBSet'); "},
            { "sht_FinalMarks_D", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT REGION as 'ns1:REGION',MarkID as 'ns1:MarkID',SheetFK as 'ns1:SheetFK',TaskNumber as 'ns1:TaskNumber',MarkValue as 'ns1:MarkValue' FROM sht_FinalMarks_D FOR XML PATH('ns1:sht_FinalMarks_D'), ROOT('ns1:GIADBSet'); "},
            { "sht_Marks_AB", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT REGION as 'ns1:REGION',MarkID as 'ns1:MarkID',SheetFK as 'ns1:SheetFK',TaskTypeCode as 'ns1:TaskTypeCode',TaskNumber as 'ns1:TaskNumber',AnswerValue as 'ns1:AnswerValue',ReplaceValue as 'ns1:ReplaceValue' FROM sht_Marks_AB FOR XML PATH('ns1:sht_Marks_AB'), ROOT('ns1:GIADBSet'); "},
            { "sht_Marks_C", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT REGION as 'ns1:REGION',MarkID as 'ns1:MarkID',SheetFK as 'ns1:SheetFK',ProtocolFile as 'ns1:ProtocolFile',ProtocolCode as 'ns1:ProtocolCode',ProtocolCRC as 'ns1:ProtocolCRC',ThirdCheck as 'ns1:ThirdCheck',RowNumber as 'ns1:RowNumber',TaskNumber as 'ns1:TaskNumber',MarkValue as 'ns1:MarkValue' FROM sht_Marks_C FOR XML PATH('ns1:sht_Marks_C'), ROOT('ns1:GIADBSet'); "},
            { "sht_Marks_D", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT REGION as 'ns1:REGION',MarkID as 'ns1:MarkID',SheetFK as 'ns1:SheetFK',ProtocolFile as 'ns1:ProtocolFile',ProtocolCode as 'ns1:ProtocolCode',ProtocolCRC as 'ns1:ProtocolCRC',ThirdCheck as 'ns1:ThirdCheck',RowNumber as 'ns1:RowNumber',TaskNumber as 'ns1:TaskNumber',MarkValue as 'ns1:MarkValue' FROM sht_Marks_D FOR XML PATH('ns1:sht_Marks_D'), ROOT('ns1:GIADBSet'); "},
            { "sht_Packages", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT REGION as 'ns1:REGION',PackageID as 'ns1:PackageID',FileName as 'ns1:FileName',RegionCode as 'ns1:RegionCode',DepartmentCode as 'ns1:DepartmentCode',TestTypeCode as 'ns1:TestTypeCode',SubjectCode as 'ns1:SubjectCode',ExamDate as 'ns1:ExamDate',StationCode as 'ns1:StationCode',AuditoriumCode as 'ns1:AuditoriumCode',Condition as 'ns1:Condition',CreateTime as 'ns1:CreateTime',UpdateTime as 'ns1:UpdateTime',SheetsCount as 'ns1:SheetsCount',IsExported as 'ns1:IsExported',ProjectName as 'ns1:ProjectName',ProjectBatchID as 'ns1:ProjectBatchID',ProjectBatchName as 'ns1:ProjectBatchName' FROM sht_Packages FOR XML PATH('ns1:sht_Packages'), ROOT('ns1:GIADBSet'); "},
            { "sht_Sheets_AB", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT REGION as 'ns1:REGION',SheetID as 'ns1:SheetID',PackageFK as 'ns1:PackageFK',FileName as 'ns1:FileName',RegionCode as 'ns1:RegionCode',DepartmentCode as 'ns1:DepartmentCode',TestTypeCode as 'ns1:TestTypeCode',SubjectCode as 'ns1:SubjectCode',ExamDate as 'ns1:ExamDate',StationCode as 'ns1:StationCode',AuditoriumCode as 'ns1:AuditoriumCode',Barcode as 'ns1:Barcode',CRC as 'ns1:CRC',ImageNumber as 'ns1:ImageNumber',VariantCode as 'ns1:VariantCode',HasSignature as 'ns1:HasSignature',Condition as 'ns1:Condition',ProjectBatchID as 'ns1:ProjectBatchID',Reserve01 as 'ns1:Reserve01',Reserve02 as 'ns1:Reserve02',Reserve03 as 'ns1:Reserve03',Reserve04 as 'ns1:Reserve04',Reserve05 as 'ns1:Reserve05',Reserve06 as 'ns1:Reserve06',Reserve07 as 'ns1:Reserve07',Reserve08 as 'ns1:Reserve08',Reserve09 as 'ns1:Reserve09',Reserve10 as 'ns1:Reserve10' FROM sht_Sheets_AB FOR XML PATH('ns1:sht_Sheets_AB'), ROOT('ns1:GIADBSet'); "},
            { "sht_Sheets_C", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT REGION as 'ns1:REGION',SheetID as 'ns1:SheetID',PackageFK as 'ns1:PackageFK',FileName as 'ns1:FileName',RegionCode as 'ns1:RegionCode',DepartmentCode as 'ns1:DepartmentCode',TestTypeCode as 'ns1:TestTypeCode',SubjectCode as 'ns1:SubjectCode',ExamDate as 'ns1:ExamDate',StationCode as 'ns1:StationCode',AuditoriumCode as 'ns1:AuditoriumCode',Barcode as 'ns1:Barcode',CRC as 'ns1:CRC',SheetCode as 'ns1:SheetCode',ResponsibleCode as 'ns1:ResponsibleCode',IsEmpty as 'ns1:IsEmpty',ImageNumber as 'ns1:ImageNumber',VariantCode as 'ns1:VariantCode',ImagePaths as 'ns1:ImagePaths',ProtocolCodes as 'ns1:ProtocolCodes',Condition as 'ns1:Condition',ProjectBatchID as 'ns1:ProjectBatchID',DeleteType as 'ns1:DeleteType',Reserve01 as 'ns1:Reserve01',Reserve02 as 'ns1:Reserve02',Reserve03 as 'ns1:Reserve03',Reserve04 as 'ns1:Reserve04',Reserve05 as 'ns1:Reserve05',Reserve06 as 'ns1:Reserve06',Reserve07 as 'ns1:Reserve07',Reserve08 as 'ns1:Reserve08',Reserve09 as 'ns1:Reserve09',Reserve10 as 'ns1:Reserve10' FROM sht_Sheets_C FOR XML PATH('ns1:sht_Sheets_C'), ROOT('ns1:GIADBSet'); "},
            { "sht_Sheets_D", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT REGION as 'ns1:REGION',SheetID as 'ns1:SheetID',PackageFK as 'ns1:PackageFK',FileName as 'ns1:FileName',RegionCode as 'ns1:RegionCode',DepartmentCode as 'ns1:DepartmentCode',TestTypeCode as 'ns1:TestTypeCode',SubjectCode as 'ns1:SubjectCode',ExamDate as 'ns1:ExamDate',StationCode as 'ns1:StationCode',AuditoriumCode as 'ns1:AuditoriumCode',Barcode as 'ns1:Barcode',CRC as 'ns1:CRC',SheetCode as 'ns1:SheetCode',ResponsibleCode as 'ns1:ResponsibleCode',IsEmpty as 'ns1:IsEmpty',ImageNumber as 'ns1:ImageNumber',VariantCode as 'ns1:VariantCode',ImagePaths as 'ns1:ImagePaths',ProtocolCodes as 'ns1:ProtocolCodes',Condition as 'ns1:Condition',ProjectBatchID as 'ns1:ProjectBatchID',DeleteType as 'ns1:DeleteType',Reserve01 as 'ns1:Reserve01',Reserve02 as 'ns1:Reserve02',Reserve03 as 'ns1:Reserve03',Reserve04 as 'ns1:Reserve04',Reserve05 as 'ns1:Reserve05',Reserve06 as 'ns1:Reserve06',Reserve07 as 'ns1:Reserve07',Reserve08 as 'ns1:Reserve08',Reserve09 as 'ns1:Reserve09',Reserve10 as 'ns1:Reserve10' FROM sht_Sheets_D FOR XML PATH('ns1:sht_Sheets_D'), ROOT('ns1:GIADBSet'); "},
            { "sht_Sheets_R", "WITH XMLNAMESPACES('http://www.rustest.ru/giadbset' as ns1) SELECT REGION as 'ns1:REGION',SheetID as 'ns1:SheetID',PackageFK as 'ns1:PackageFK',FileName as 'ns1:FileName',RegionCode as 'ns1:RegionCode',DepartmentCode as 'ns1:DepartmentCode',TestTypeCode as 'ns1:TestTypeCode',SubjectCode as 'ns1:SubjectCode',ExamDate as 'ns1:ExamDate',StationCode as 'ns1:StationCode',AuditoriumCode as 'ns1:AuditoriumCode',Barcode as 'ns1:Barcode',CRC as 'ns1:CRC',ParticipantID as 'ns1:ParticipantID',SchoolCode as 'ns1:SchoolCode',Surname as 'ns1:Surname',Name as 'ns1:Name',SecondName as 'ns1:SecondName',DocumentSeries as 'ns1:DocumentSeries',DocumentNumber as 'ns1:DocumentNumber',DocumentHash as 'ns1:DocumentHash',Sex as 'ns1:Sex',ImageNumber as 'ns1:ImageNumber',VariantCode as 'ns1:VariantCode',HasSignature as 'ns1:HasSignature',Condition as 'ns1:Condition',ProjectBatchID as 'ns1:ProjectBatchID',Reserve01 as 'ns1:Reserve01',Reserve02 as 'ns1:Reserve02',Reserve03 as 'ns1:Reserve03',Reserve04 as 'ns1:Reserve04',Reserve05 as 'ns1:Reserve05',Reserve06 as 'ns1:Reserve06',Reserve07 as 'ns1:Reserve07',Reserve08 as 'ns1:Reserve08',Reserve09 as 'ns1:Reserve09',Reserve10 as 'ns1:Reserve10' FROM sht_Sheets_R FOR XML PATH('ns1:sht_Sheets_R'), ROOT('ns1:GIADBSet'); "},
        };
    }
}
